- name: "Run post network setup tasks"
  vars:
    ansible_connection: local
  delegate_to: 127.0.0.1
  run_once: true
  become: false
  block:
    - name: Make sure output dir exists
      ansible.builtin.file:
        path: "{{ ethereum_genesis_generator_output_dir }}"
        state: directory
        recurse: true
    # Generate missing network config files
    - name: Generate bootnode.txt for EL clients
      ansible.builtin.copy:
        content: |
          {% for host in (groups['ethereum_node']) | sort | unique %}
          {% if hostvars[host]['ethereum_node_fact_el_enode'] is defined %}
          {{ hostvars[host]['ethereum_node_fact_el_enode'] }}
          {% endif %}
          {% endfor %}
        dest: "{{ ethereum_genesis_generator_output_dir }}/bootnode.txt"
        mode: "0644"
    - name: Generate "boot_enr.yaml" for CL clients
      ansible.builtin.copy:
        content: |
          {% for host in (groups['ethereum_node'] + groups['bootnode']) | sort | unique %}
          {% if hostvars[host]['cl_bootnode_fact_enr'] is defined %}
          - {{ hostvars[host]['cl_bootnode_fact_enr'] }}
          {% endif %}
          {% if hostvars[host]['ethereum_node_fact_cl_enr'] is defined %}
          - {{ hostvars[host]['ethereum_node_fact_cl_enr'] }}
          {% endif %}
          {% endfor %}
        dest: "{{ ethereum_genesis_generator_output_dir }}/boot_enr.yaml"
        mode: "0644"
    - name: Generate "bootstrap_nodes.txt" for CL clients
      ansible.builtin.copy:
        content: |
          {% for host in (groups['ethereum_node'] + groups['bootnode']) | sort | unique %}
          {% if hostvars[host]['cl_bootnode_fact_enr'] is defined %}
          {{ hostvars[host]['cl_bootnode_fact_enr'] }}
          {% endif %}
          {% if hostvars[host]['ethereum_node_fact_cl_enr'] is defined %}
          {{ hostvars[host]['ethereum_node_fact_cl_enr'] }}
          {% endif %}
          {% endfor %}
        dest: "{{ ethereum_genesis_generator_output_dir }}/bootstrap_nodes.txt"
        mode: "0644"
